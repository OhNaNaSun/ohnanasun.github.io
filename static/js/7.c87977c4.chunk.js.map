{"version":3,"sources":["components/ShowdownConverter.ts","components/MessageBar.tsx","pages/QuestionStyle.tsx","components/AccordionDetail.tsx","constants.ts","components/AlertDialog.tsx","components/SortableList.tsx","pages/Question.tsx"],"names":["Showdown","type","filter","text","converter","options","replaceRecursiveRegExp","wholeMatch","match","left","right","replace","htmlunencode","highlightjs","highlightAuto","value","ShowdownConverter","tables","simplifiedAutoLink","strikethrough","tasklists","extensions","MessageBar","messageIn","useState","message","setMessage","useEffect","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","status","useStyles","makeStyles","theme","createStyles","root","margin","accordingTitle","alignItems","heading","fontSize","typography","pxToRem","flexGrow","display","secondaryHeading","marginRight","spacing","questionBox","backgroundColor","flexDirection","gap","button","float","AccordionDetail","content","isExpanded","sortIndex","collapseItem","classes","style","padding","className","dangerouslySetInnerHTML","__html","makeHtml","component","color","onClick","tabContentMap","key","name","AlertDialog","isOpen","title","setIsOpen","confirmCallback","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","SortableListContainer","questionList","onSortEnd","deleteDoc","tabIndex","moveToTop","history","useHistory","deletingId","setDeletingId","SortableItem","SortableElement","Card","background","marginTop","CardHeader","disableTypography","action","IconButton","size","aria-label","push","Collapse","in","timeout","unmountOnExit","Divider","CardContent","SortableList","SortableContainer","items","map","index","distance","find","QuestionPage","hash","useLocation","isLoading","setIsLoading","countMap","setCountMap","hashTabIndex","findIndex","React","setTabIndex","setQuestionList","console","log","process","fetchDoc","useCallback","a","fetch","fileMapResponse","json","fileMap","item","sort","b","seq","countMapResponse","countMapData","method","res","getDocContent","pre","newState","saveSort","ids","headers","body","JSON","stringify","href","Tabs","onChange","event","newValue","Tab","label","role","Box","p","CircularProgress","width","oldIndex","preItems","arrayMove","newIndex"],"mappings":"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","file":"static/js/7.c87977c4.chunk.js","sourcesContent":["import 'highlight.js/styles/vs2015.css'\n\n// https://codepen.io/KrissSteindals/pen/yrBdQe?editors=0110\nimport * as Showdown from 'showdown'\nimport highlightjs from 'highlight.js'\n\nShowdown.extension('codehighlight', function () {\n  function htmlunencode(text: string) {\n    return text.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>')\n  }\n  return [\n    {\n      type: 'output',\n      filter(text, converter, options) {\n        // use new shodown's regexp engine to conditionally parse codeblocks\n        const left = '<pre><code\\\\b[^>]*>'\n        const right = '</code></pre>'\n        const flags = 'g'\n        const replacement = function (wholeMatch: string, match: string, left: string, right: string) {\n          // unescape match to prevent double escaping\n          match = htmlunencode(match)\n          return left + highlightjs.highlightAuto(match).value + right\n        }\n        return Showdown.helper.replaceRecursiveRegExp(text, replacement, left, right, flags)\n      },\n    },\n  ]\n})\nconst ShowdownConverter = new Showdown.Converter({\n  tables: true,\n  simplifiedAutoLink: true,\n  strikethrough: true,\n  tasklists: true,\n  extensions: ['codehighlight'],\n})\nexport default ShowdownConverter\n","import React, { useEffect, useState } from 'react'\nimport Alert from '@material-ui/lab/Alert'\nimport Snackbar from '@material-ui/core/Snackbar'\n\ninterface MessageType {\n  text: string\n  status: 'error' | 'success'\n}\ninterface MessageBarProps {\n  messageIn: MessageType\n}\nconst MessageBar: React.FC<MessageBarProps> = ({ messageIn }) => {\n  const [message, setMessage] = useState<MessageType | null>(null)\n  const handleClose = (): void => {\n    setMessage(null)\n  }\n  useEffect(() => {\n    setMessage(messageIn)\n  }, [messageIn])\n  return (\n    <Snackbar\n      open={!!message}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert severity={message?.status}>{message?.text}</Alert>\n    </Snackbar>\n  )\n}\nexport default MessageBar\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: '20px auto',\n    },\n    accordingTitle: {\n      alignItems: 'center',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexGrow: 1,\n      display: 'flex',\n    },\n    secondaryHeading: {\n      marginRight: theme.spacing(2),\n      fontSize: theme.typography.pxToRem(20),\n    },\n    questionBox: {\n      backgroundColor: '#2D333B',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '10px',\n    },\n    button: {\n      fontSize: theme.typography.pxToRem(15),\n      float: 'right',\n      display: 'flex',\n    },\n  })\n)\nexport default useStyles\n","import React from 'react'\nimport { Link as UiLink } from '@material-ui/core'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ShowdownConverter from 'components/ShowdownConverter'\n\nimport useStyles from '../pages/QuestionStyle'\n\ninterface AccordionDetailProps {\n  content?: string\n  isExpanded: boolean\n  sortIndex: number\n  collapseItem: (arg0: boolean, arg1: number) => void\n}\nconst AccordionDetail: React.FC<AccordionDetailProps> = ({ content, isExpanded, sortIndex, collapseItem }) => {\n  const classes = useStyles()\n  return (\n    <div\n      style={{\n        padding: '20px',\n      }}\n    >\n      <div className=\"markdown-body\">\n        <span dangerouslySetInnerHTML={{ __html: ShowdownConverter.makeHtml(content || '') }} />\n      </div>\n      <div>\n        <UiLink\n          component=\"button\"\n          className={classes.button}\n          color=\"secondary\"\n          onClick={(): void => {\n            collapseItem(!isExpanded, sortIndex)\n          }}\n        >\n          collapse\n          <ArrowUpwardIcon fontSize=\"small\" />\n        </UiLink>\n      </div>\n    </div>\n  )\n}\nexport default AccordionDetail\n","const tabContentMap = [\n  { key: 'javascript', name: 'JavaScript' },\n  { key: 'react', name: 'React' },\n  { key: 'html', name: 'HTML' },\n  { key: 'css', name: 'CSS' },\n  { key: 'internet', name: 'Internet' },\n]\nexport default tabContentMap\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\ninterface AlertDialogProps {\n  isOpen: boolean\n  confirmCallback: () => void\n  title?: string\n  setIsOpen: (arg0: boolean) => void\n}\nconst AlertDialog: React.FC<AlertDialogProps> = ({ isOpen, title, setIsOpen, confirmCallback }) => {\n  const handleClose = (): void => {\n    setIsOpen(false)\n  }\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Deleting</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Do you want to delete <b>{title}</b>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button\n            onClick={(): void => {\n              handleClose()\n              confirmCallback()\n            }}\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\nexport default AlertDialog\n","import { SortableContainer, SortableElement } from 'react-sortable-hoc'\nimport React, { useState } from 'react'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline'\nimport Divider from '@material-ui/core/Divider'\nimport EditIcon from '@material-ui/icons/Edit'\nimport AccordionDetail from 'components/AccordionDetail'\nimport { useHistory } from 'react-router-dom'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport tabContentMap from '../constants'\nimport { SortableListContainerProps, QuestionStateType, QuestionMapType } from '../types'\nimport AlertDialog from './AlertDialog'\n\nconst SortableListContainer: React.FC<SortableListContainerProps> = ({\n  collapseItem,\n  questionList,\n  onSortEnd,\n  deleteDoc,\n  tabIndex,\n  moveToTop,\n}) => {\n  const history = useHistory()\n  const [isOpen, setIsOpen] = useState(false)\n  const [deletingId, setDeletingId] = useState('')\n  const SortableItem = SortableElement(({ value, sortIndex }: { value: QuestionStateType; sortIndex: number }) => {\n    const { title, id, isExpanded, content } = value\n    return (\n      <>\n        <Card\n          style={{\n            background: 'rgb(58, 64, 76)',\n            marginTop: '2px',\n          }}\n        >\n          <CardHeader\n            disableTypography\n            action={\n              <>\n                <IconButton\n                  onClick={(): void => collapseItem(!isExpanded, sortIndex)}\n                  size=\"small\"\n                  color=\"inherit\"\n                  aria-label=\"Expand\"\n                  component=\"span\"\n                >\n                  <ExpandMoreIcon />\n                </IconButton>\n                <IconButton\n                  onClick={(): void => moveToTop(sortIndex)}\n                  size=\"small\"\n                  color=\"inherit\"\n                  aria-label=\"Move to top\"\n                  component=\"span\"\n                >\n                  <ArrowUpwardIcon />\n                </IconButton>\n                <IconButton\n                  onClick={(): void => {\n                    history.push(`/${tabContentMap[tabIndex].key}/${id}`)\n                  }}\n                  size=\"small\"\n                  color=\"inherit\"\n                  aria-label=\"Move to top\"\n                  component=\"span\"\n                >\n                  <EditIcon />\n                </IconButton>\n                <IconButton\n                  onClick={(): void => {\n                    setDeletingId(id)\n                    setIsOpen(true)\n                  }}\n                  size=\"small\"\n                  color=\"inherit\"\n                  aria-label=\"Delete\"\n                  component=\"span\"\n                >\n                  <DeleteOutlineIcon />\n                </IconButton>\n              </>\n            }\n            title={title}\n          />\n          <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\n            <Divider />\n            <CardContent>\n              <AccordionDetail {...{ content, isExpanded, sortIndex, collapseItem }} />\n            </CardContent>\n          </Collapse>\n        </Card>\n        <Divider />\n      </>\n    )\n  })\n  const SortableList = SortableContainer(({ items }: { items: QuestionMapType }) => {\n    return (\n      <div>\n        {(items || []).map((value, index) => (\n          <SortableItem key={`item-${index}`} index={index} sortIndex={index} value={value} />\n        ))}\n      </div>\n    )\n  })\n  return (\n    <>\n      <SortableList distance={2} items={questionList || []} onSortEnd={onSortEnd} />\n      <AlertDialog\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        title={\n          questionList?.find(({ id }) => {\n            return id === deletingId\n          })?.title\n        }\n        confirmCallback={(): void => {\n          deleteDoc(deletingId)\n        }}\n      />\n    </>\n  )\n}\nexport default SortableListContainer\n","import React, { useEffect, useState, useCallback } from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport { useLocation } from 'react-router-dom'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport MessageBar from 'components/MessageBar'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport arrayMove from 'array-move'\nimport SortableList from 'components/SortableList'\nimport useStyles from './QuestionStyle'\nimport { QuestionData, QuestionMapType, docCountType } from '../types'\n\nimport tabContentMap from '../constants'\n\nconst QuestionPage: React.FC = () => {\n  const classes = useStyles()\n  const { hash } = useLocation()\n  const [isLoading, setIsLoading] = useState(false)\n  const [countMap, setCountMap] = useState<docCountType | null>(null)\n  const [message, setMessage] = useState<{ text: string; status: 'success' | 'error' } | null>(null)\n  const hashTabIndex = tabContentMap.findIndex(({ key }) => key === hash.replace('#', ''))\n  const [tabIndex, setTabIndex] = React.useState(hashTabIndex !== -1 ? hashTabIndex : 0)\n\n  const [questionList, setQuestionList] = useState<QuestionMapType>([])\n  console.log('env', process.env)\n  const fetchDoc = useCallback(() => {\n    ;(async (): Promise<void> => {\n      setIsLoading(true)\n      const fileMapResponse = await fetch(`${process.env.REACT_APP_API_URL}/documents/${tabContentMap[tabIndex].key}`)\n      const fileMap = await fileMapResponse.json()\n      setIsLoading(false)\n      setQuestionList(\n        fileMap\n          .map((item: QuestionData) => {\n            return { ...item, isExpanded: false }\n          })\n          .sort((a: QuestionData, b: QuestionData) => a.seq - b.seq)\n      )\n    })()\n  }, [tabIndex])\n  useEffect(() => {\n    ;(async (): Promise<void> => {\n      const countMapResponse = await fetch(`${process.env.REACT_APP_API_URL}/documents/count`)\n      const countMapData = await countMapResponse.json()\n      setCountMap(countMapData)\n    })()\n  }, [tabIndex])\n\n  useEffect(() => {\n    fetchDoc()\n  }, [fetchDoc])\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number): void => {\n    setTabIndex(newValue)\n  }\n  const deleteDoc = async (id: string): Promise<void> => {\n    const fileMapResponse = await fetch(\n      `${process.env.REACT_APP_API_URL}/documents/${tabContentMap[tabIndex].key}/${id}`,\n      {\n        method: 'DELETE',\n      }\n    )\n    const res = await fileMapResponse.json()\n    if (res.status === 'success') {\n      setMessage({ status: res.status, text: res.message })\n      fetchDoc()\n    }\n  }\n  const collapseItem = async (isExpanded: boolean, index: number): Promise<void> => {\n    let { content } = questionList[index]\n    if (isExpanded && !content) {\n      const getDocContent = await fetch(\n        `${process.env.REACT_APP_API_URL}/documents/${tabContentMap[tabIndex].key}/${questionList[index].id}`,\n        {\n          method: 'GET',\n        }\n      )\n      const res = await getDocContent.json()\n      content = res.content\n    }\n    setQuestionList((pre) => {\n      const newState = [...pre]\n      newState[index] = { ...newState[index], isExpanded, content }\n      return newState\n    })\n  }\n  const onSortEnd = ({ oldIndex, newIndex }: { oldIndex: number; newIndex: number }): void => {\n    setQuestionList((preItems) => arrayMove(preItems || [], oldIndex, newIndex))\n  }\n  const moveToTop = (oldIndex: number): void => {\n    setQuestionList((preItems) => arrayMove(preItems || [], oldIndex, 0))\n  }\n  const saveSort = async (): Promise<void> => {\n    const ids = questionList.map(({ id }) => id)\n    const getDocContent = await fetch(`${process.env.REACT_APP_API_URL}/documents/${tabContentMap[tabIndex].key}/seq`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify(ids),\n    })\n    const res = await getDocContent.json()\n    setMessage({ status: res.status, text: res.message })\n  }\n  return (\n    <div className={classes.root}>\n      {message && <MessageBar messageIn={message} />}\n      <Button onClick={saveSort} color=\"secondary\">\n        Save Order\n      </Button>\n      <Button href={`${tabContentMap[tabIndex].key}/add`} color=\"secondary\">\n        + Add\n      </Button>\n      <Tabs value={tabIndex} onChange={handleChange}>\n        {tabContentMap.map(({ key, name }) => (\n          <Tab key={key} label={`${name} ${countMap ? `(${countMap[key]})` : ''}`} />\n        ))}\n      </Tabs>\n      <div role=\"tabpanel\">\n        <Box p={3} className={classes.questionBox}>\n          {isLoading ? (\n            <CircularProgress size={30} color=\"secondary\" />\n          ) : (\n            <Box width=\"100%\">\n              <SortableList {...{ moveToTop, tabIndex, collapseItem, onSortEnd, deleteDoc, questionList }} />\n              <Button href={`${tabContentMap[tabIndex].key}/add`} color=\"secondary\">\n                + Add\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </div>\n    </div>\n  )\n}\nexport default QuestionPage\n"],"sourceRoot":""}